<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/rabbit
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">
    <!-- 连接配置 -->
    <rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}" />
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- spring template声明-->
    <rabbit:template id="amqpTemplate" exchange="evanTest_exchange" connection-factory="connectionFactory" />

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />
    <!--
        durable:是否持久化
        exclusive: 仅创建者可以使用的私有队列，断开后自动删除
        auto_delete: 当所有消费客户端连接断开后，是否自动删除队列
     -->

    <!--  申明一个消息队列Queue   -->
    <rabbit:queue id="readNovel_queue" name="readNovel_queue" durable="true" auto-delete="false" exclusive="false" >
    </rabbit:queue>
    <!--
     rabbit:direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。
     rabbit:binding：设置消息queue匹配的key
     -->
    <!-- 交换机定义 -->
    <rabbit:direct-exchange name="evanTest_exchange" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="readNovel_queue" key="readNovel_key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- 消息接收者 -->
    <bean id="readNovelReceiveMessage" class="com.novel.receiveMessage.ReadNovelReceiveMessage"></bean>


    <!--
         queues：监听的队列，多个的话用逗号（,）分隔; ref：监听器
     -->
    <!-- 配置监听  acknowledeg = "manual"   设置手动应答  当消息处理失败时:会一直重发  直到消息处理成功 -->
    <!--concurrency设置的是对每个listener在初始化的时候设置的并发消费者的个数，prefetch是每次从一次性从broker里面取的待消费的消息的个数-->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual" concurrency="10" prefetch="10">
        <!-- 配置监听器 -->
        <rabbit:listener queues="readNovel_queue" ref="readNovelReceiveMessage"/>
    </rabbit:listener-container>
</beans>